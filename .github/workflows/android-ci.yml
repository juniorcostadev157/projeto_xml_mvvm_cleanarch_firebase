name: Android CI 🚧

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - feature/**
      - fix/**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v3

      - name: 🔑 Permissão para gradlew
        run: chmod +x ./gradlew

      - name: ☕️ Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: 🧱 Configurar cache do Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔐 Criar google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      - name: 🔏 Decodificar Keystore
        run: |
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 --decode > app/keystore.jks

      # --- Etapas do CI ---
      - name: 🔎 Rodar Detekt
        run: ./gradlew detekt || echo "Detekt falhou, verifique os avisos"

      - name: 🎨 Rodar Ktlint
        run: ./gradlew ktlintCheck || echo "Ktlint falhou, verifique os avisos"

      - name: 🧹 Rodar Lint (com assinatura)
        run: ./gradlew lint \
          -Pandroid.injected.signing.store.file=app/keystore.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.SIGNING_STORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.SIGNING_KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: 🧪 Rodar Testes Unitários
        run: ./gradlew test \
          -Pandroid.injected.signing.store.file=app/keystore.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.SIGNING_STORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.SIGNING_KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: 🧮 Gerar Relatório de Cobertura (Jacoco)
        run: ./gradlew jacocoTestReport \
          -Pandroid.injected.signing.store.file=app/keystore.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.SIGNING_STORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.SIGNING_KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: 📊 Salvar Relatório Jacoco como artefato
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: app/build/reports/jacoco/jacocoTestReport/html
